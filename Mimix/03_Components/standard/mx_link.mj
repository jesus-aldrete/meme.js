class extends HTMLAnchorElement:a {
	View () {
		& (click)=onClick>{this.body}
	}
	Style() {/* Tema */
		@theme-light
			--_variant_button-back         : $!high
			--_variant_button-color        : $!soft
			--_variant_button-border       : $!soft_40
			--_variant_button_hover-back   : $!high_70
			--_variant_button_active-back  : $!high_40
			--_variant_button__focus-shadow: rgba($!_high, .3)
		@theme-dark
			--_variant_button-back         : $!high
			--_variant_button-color        : $!soft
			--_variant_button-border       : black
			--_variant_button_hover-back   : $!high_70
			--_variant_button_active-back  : $!high_40
			--_variant_button__focus-shadow: rgba($!_high, .3)
	}
	Style() {
		display        : flex
		text-decoration: inherit
		transition     : color $!animation

		&._variant_button
			align-items     : center
			background-color: $_variant_button-back
			border-radius   : 1000
			border          : solid 1 $_variant_button-border
			box-sizing      : border-box
			color           : $_variant_button-color
			display         : flex
			gap             : 5
			outline         : none
			padding         : 8 16
			transition      : background-color $!animation, color $!animation
			::visited
				background-color: $_variant_button-back
				border          : solid 1 $_variant_button-border
				color           : $_variant_button-color
			::hover
				background-color: $_variant_button_hover-back
			::active
				background-color: $_variant_button_active-back
				transition      : none
			&._focus     :>box-shadow: 0 0 1 3 $_variant_button__focus-shadow;
			&._wait_ok   :>background-color: $!cgreen
			&._wait_wait :>background-color: $!cpurple_70
			&._wait_warn :>background-color: $!cyellow
			&._wait_error:>background-color: $!cred;color: $!back
			&._disabled
				background-color: $_variant_button-back
				cursor          : not-allowed
				opacity         : .3
	}

	// front-public
	get variant(     ) { return props.variant ?? 'default' }
	set variant( val ) {
		val           =
		props.variant = String( val );

		this.Class( /_variant_/      , false );
		this.Class( `_variant_${val}`, true  );
	}

	// front-private
	onClick( event ) {
		const url = new URL( this.href );

		if ( url.host!==location.host ) return;

		event.preventDefault();
		event.stopPropagation();

		this.Trigger( 'mx/router/push', url );
	}
}